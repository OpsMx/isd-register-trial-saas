apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: pgadmin
  namespace: ns-isd-register
data:
  pgadmin-password: bmV0d29ya3MxMjM=

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pgadmin-config
  namespace: ns-isd-register
data:
  servers.json: |
    {
        "Servers": {
          "1": {
            "Name": "PostgreSQL DB",
            "Group": "Servers",
            "Port": 5432,
            "Username": "postgres",
            "Host": "postgres",
            "SSLMode": "prefer",
            "MaintenanceDB": "postgres"
          }
        }
    }

---
apiVersion: v1
kind: Service
metadata:
  name: pgadmin-service
  namespace: ns-isd-register
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: http
  selector:
    app: pgadmin
  type: NodePort


---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pgadmin
  namespace: ns-isd-register
spec:
  serviceName: pgadmin-service
  podManagementPolicy: Parallel
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: pgadmin
  template:
    metadata:
      labels:
        app: pgadmin
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: pgadmin
          image: dpage/pgadmin4:6.5
          imagePullPolicy: Always
          env:
            - name: PGADMIN_DEFAULT_EMAIL
              value: ashish.singh@opsmx.io
            - name: PGADMIN_DEFAULT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pgadmin
                  key: pgadmin-password
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: pgadmin-config
              mountPath: /pgadmin4/servers.json
              subPath: servers.json
              readOnly: true
            - name: pgadmin-data
              mountPath: /tmp
      volumes:
        - name: pgadmin-config
          configMap:
            name: pgadmin-config
  volumeClaimTemplates:
    - metadata:
        name: pgadmin-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 3Gi

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    acme.cert-manager.io/http01-edit-in-place: "true"
    cert-manager.io/issue-temporary-certificate: "true"
    cert-manager.io/issuer: letsencrypt-reg-spin
    ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/ingress.class: nginx
  name: pgadmin-service
  namespace: ns-isd-register
spec:
  rules:
    - host: pgadmin.canis.isd.opsmx.org
      http:
        paths:
          - backend:
              service:
                name: pgadmin-service
                port:
                  number: 80
            path: /
            pathType: ImplementationSpecific
  tls:
    - hosts:
        - pgadmin.canis.isd.opsmx.org
      secretName: reg-new-authtls