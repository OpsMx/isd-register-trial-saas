apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-conf
  namespace: ns-isd-register-prod
data:
  host: postgres
  name: isdregisterdb

---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-credentials
  namespace: ns-isd-register-prod
data:
  postgres_user: cG9zdGdyZXM=
  postgres_password: bmV0d29ya3MxMjM=

---
apiVersion: v1
kind: Service
metadata:
  name: opsmx-isd-register-service
  namespace: ns-isd-register-prod
  labels:
    name: opsmx-isd-register-service
spec:
  ports:
    - nodePort: 30164
      port: 8010
      targetPort: 8010
      protocol: TCP
  selector:
    app: opsmx-isd-register-service
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opsmx-isd-register-service
  namespace: ns-isd-register-prod
spec:
  selector:
    matchLabels:
      app: opsmx-isd-register-service
  replicas: 1
  template:
    metadata:
      labels:
        app: opsmx-isd-register-service
    spec:
      containers:
        - name: opsmx-isd-register-service
          image: ashishck/opsmx-isd-register:v5.5.8
          ports:
            - containerPort: 8010
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: postgres-conf
                  key: host
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: postgres-conf
                  key: name
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: postgres_user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: postgres_password

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    acme.cert-manager.io/http01-edit-in-place: "true"
    cert-manager.io/issue-temporary-certificate: "true"
    cert-manager.io/issuer: letsencrypt-reg-spin
    ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/ingress.class: nginx
  name: opsmx-isd-register-service
  namespace: ns-isd-register-prod
spec:
  rules:
    - host: opsmx-register-prod.canis.isd.opsmx.org
      http:
        paths:
          - backend:
              service:
                name: opsmx-isd-register-service
                port:
                  number: 8010
            path: /
            pathType: ImplementationSpecific
  tls:
    - hosts:
        - opsmx-register-prod.canis.isd.opsmx.org
      secretName: reg-new-authtls
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: ns-isd-register-prod
  labels:
    app: postgres
    tier: database
spec:
  ports:
    - port: 5432
  selector:
    app: postgres
    tier: database
  clusterIP: None

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim
  namespace: ns-isd-register-prod
  labels:
    app: postgres
    tier: database
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: ns-isd-register-prod
  labels:
    app: postgres
    tier: database
spec:
  selector:
    matchLabels:
      app: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: postgres
        tier: database
    spec:
      containers:
        - name: postgres
          image: postgres
          imagePullPolicy: "IfNotPresent"
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: postgres_user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: postgres_password
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: postgres-conf
                  key: name
          ports:
            - containerPort: 5432
              name: postgres
          volumeMounts:
            - mountPath: /tmp
              name: postgres-persistance-storage
      volumes:
        - name: postgres-persistance-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim


